{"version":3,"sources":["componentes/Buscador.js","componentes/Imagen.js","componentes/Paginacion.js","componentes/Resultado.js","App.js","serviceWorker.js","index.js","img/background.jpg"],"names":["Buscador","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","current","value","props","datosBusqueda","onSubmit","this","className","ref","type","placeholder","Component","Imagen","imagen","largeImageURL","likes","webformatURL","tags","views","src","alt","href","target","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","Fragment","map","key","id","App","scroll","document","querySelector","scrollIntoView","pagina","state","setState","consultarApi","replace","url","fetch","then","respuesta","json","resultado","hits","background","Background","body","style","backgroundImage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.2f045574.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Buscador extends Component {\r\n    busquedaRef = React.createRef();\r\n    \r\n\r\n    obtenerDatos = (e) =>{\r\n        e.preventDefault();\r\n        //Se guarda el valor de la referencia al input\r\n        const termino = this.busquedaRef.current.value;\r\n        //Se ejecuta la funci√≥n del componente padre pasada por props\r\n        this.props.datosBusqueda(termino);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.obtenerDatos}>\r\n                <div className=\"row\">\r\n                    <div className=\"form-group col-md-8\">\r\n                        <input  ref={this.busquedaRef} type=\"text\" className=\"form-control form-control-lg\"\r\n                        placeholder=\"Search images Ex: Flowers\" />\r\n                    </div>\r\n                    <div className=\"form-group col-md-4\">\r\n                        <input type=\"submit\" className=\"btn btn-lg btn-danger btn-block\" value=\"Search\"/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </form>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default Buscador;\r\n","import React from 'react'\r\n\r\nconst Imagen = (props) => {\r\n    const {largeImageURL, likes, webformatURL, tags, views} = props.imagen;\r\n    return (\r\n        <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n            <div className=\"card \">\r\n                <img src={webformatURL} alt={tags} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-text h5\">{likes} Likes</h3>\r\n                    <h3 className=\"card-text h5\">{views} View</h3>\r\n                    <a href={largeImageURL} target=\"_blank\" className=\"btn btn-primary btn-block\">See Full Image</a>\r\n                </div>\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Imagen;\r\n","import React from 'react'\r\n\r\nconst Paginacion = (props) => {\r\n    return (\r\n        <div className=\"py-3\">\r\n            <button onClick={props.paginaAnterior} type=\"button\" className=\"btn btn-info mr-1\">Previous &larr;</button>\r\n            <button onClick={props.paginaSiguiente} type=\"button\" className=\"btn btn-info mr-1\">Next &rarr;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion;","import React, { Component } from 'react'\r\nimport Imagen from './Imagen';\r\nimport Paginacion from './Paginacion';\r\n\r\nclass Resultado extends Component {\r\n    mostrarImagenes = () => {\r\n        const imagenes = this.props.imagenes;\r\n\r\n        if(imagenes.length === 0) return null;\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"col-12 p-5 row\">\r\n                    {imagenes.map((imagen) => (\r\n                       <Imagen key={imagen.id} imagen={imagen}/>\r\n                    ))}\r\n                </div> \r\n                <Paginacion\r\n                    paginaAnterior={this.props.paginaAnterior}\r\n                    paginaSiguiente={this.props.paginaSiguiente}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.mostrarImagenes()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;\r\n","\nimport React, { Component } from 'react'\nimport Buscador from './componentes/Buscador'\nimport Resultado from './componentes/Resultado'\nimport Background from './img/background.jpg'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       termino : \"\",\n       imagenes : [],\n       pagina : \"\"\n    }\n  }\n  \n  scroll = () =>{\n    const elemento = document.querySelector('.jumbotron');\n    elemento.scrollIntoView('smooth','start');\n  }\n  paginaAnterior = () =>{\n    let pagina = this.state.pagina;\n    if(pagina === 1) return null;\n    pagina -= 1;\n    this.setState({\n      pagina : pagina\n    },()=>{\n      this.consultarApi();\n      this.scroll();\n    });\n  }\n  paginaSiguiente = () =>{\n    let pagina = this.state.pagina;\n    pagina += 1;\n    this.setState({\n      pagina : pagina\n    },()=>{\n      this.consultarApi();\n      this.scroll();\n    });\n  }\n  consultarApi = () =>{\n    const termino = this.state.termino.replace(\" \",\"&\");\n    const pagina = this.state.pagina;\n    const url = `https://pixabay.com/api/?key=17214196-b709fffc021d36f1b321eb308&q=${termino}&per_page=30&page=${pagina}`;\n    fetch(url)\n    .then(respuesta => respuesta.json())\n    .then(resultado => this.setState({imagenes : resultado.hits}))\n  }\n\n  datosBusqueda = (termino) =>{\n    this.setState({\n      termino : termino,\n      pagina : 1\n    },() =>{\n      this.consultarApi()\n    })\n  }\n\n  render() {\n    var background = Background;\n    document.body.style.backgroundImage= `url(${background})`;\n    return (\n      <div className=\"app container\">\n        <div className=\"jumbotron\">\n          <h1 className=\"lead text-center\">Image finder</h1>\n          <Buscador datosBusqueda={this.datosBusqueda}/>\n        </div>\n        <div className=\"row justify-content-center\">\n          <Resultado \n            imagenes={this.state.imagenes}\n            paginaAnterior={this.paginaAnterior}\n            paginaSiguiente={this.paginaSiguiente}\n          />\n        </div>\n      </div>\n      \n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.6731dba5.jpg\";"],"sourceRoot":""}